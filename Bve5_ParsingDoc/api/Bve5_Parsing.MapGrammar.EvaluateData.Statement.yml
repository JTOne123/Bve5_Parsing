### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  commentId: T:Bve5_Parsing.MapGrammar.EvaluateData.Statement
  id: Statement
  parent: Bve5_Parsing.MapGrammar.EvaluateData
  children:
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor(System.Double)
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  langs:
  - csharp
  - vb
  name: Statement
  nameWithType: Statement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Statement
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 10
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nステートメントのベースクラス\n"
  example: []
  syntax:
    content: public abstract class Statement
    content.vb: Public MustInherit Class Statement
  inheritance:
  - System.Object
  derivedClasses:
  - Bve5_Parsing.MapGrammar.EvaluateData.AdhesionChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.BackgroundChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.BeaconPutStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CabilluminanceInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveBegintransitionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveEndStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveSetcenterStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveSetfunctionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.CurveSetgaugeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.DrawdistanceChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.FlangenoiseChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.FogInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.GradientBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.GradientBegintransitionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.GradientEndStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.GradientInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.IrregularityChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.JointnoisePlayStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LegacyCurveStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LegacyFogStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LegacyPitchStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LegacyTurnStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LightAmbientStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.LightDiffuseStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.PretrainPassStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterEndStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.RollingnoiseChangeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SectionBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SectionSetspeedlimitStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SignalLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SignalPutStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.Sound3dLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.Sound3dPutStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SoundLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SoundPlayStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SpeedlimitBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.SpeedlimitEndStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.StationLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.StationPutStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.StructureLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.StructurePut0Statement
  - Bve5_Parsing.MapGrammar.EvaluateData.StructurePutbetweenStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.StructurePutStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantBeginStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantBegintransitionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantEndStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantSetcenterStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantSetfunctionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackCantSetgaugeStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackPositionStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackXInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrackYInterpolateStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrainAddStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrainEnableStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrainLoadStatement
  - Bve5_Parsing.MapGrammar.EvaluateData.TrainStopStatement
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  id: ElementName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: Statement.ElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: ElementName
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 15
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nマップ要素名\n"
  example: []
  syntax:
    content: public abstract MapElementName ElementName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapElementName
    content.vb: Public MustOverride ReadOnly Property ElementName As MapElementName
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  id: FunctionName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: FunctionName
  nameWithType: Statement.FunctionName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: FunctionName
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 20
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nマップ関数名\n"
  example: []
  syntax:
    content: public abstract MapFunctionName FunctionName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapFunctionName
    content.vb: Public MustOverride ReadOnly Property FunctionName As MapFunctionName
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  id: HasKey
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: HasKey
  nameWithType: Statement.HasKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasKey
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 25
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nキーを指定する構文か？\n"
  example: []
  syntax:
    content: public abstract bool HasKey { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property HasKey As Boolean
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  id: HasSubElement
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: HasSubElement
  nameWithType: Statement.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasSubElement
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 30
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n副要素を指定する構文か？\n"
  example: []
  syntax:
    content: public abstract bool HasSubElement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property HasSubElement As Boolean
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  id: Distance
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: Statement.Distance
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Distance
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 35
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n距離程\n"
  example: []
  syntax:
    content: public double Distance { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Distance As Double
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor
  id: '#ctor'
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: Statement()
  nameWithType: Statement.Statement()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Statement()
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 37
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  syntax:
    content: public Statement()
    content.vb: Public Sub New
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor(System.Double)
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: Statement(Double)
  nameWithType: Statement.Statement(Double)
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Statement(System.Double)
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 39
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  syntax:
    content: public Statement(double distance)
    parameters:
    - id: distance
      type: System.Double
    content.vb: Public Sub New(distance As Double)
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  id: GetAllArguments
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: GetAllArguments()
  nameWithType: Statement.GetAllArguments()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments()
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: GetAllArguments
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 45
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nすべての引数を取得します。\n"
  example: []
  syntax:
    content: protected IEnumerable<PropertyInfo> GetAllArguments()
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: ''
    content.vb: Protected Function GetAllArguments As IEnumerable(Of PropertyInfo)
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  id: ToSyntaxData
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  langs:
  - csharp
  - vb
  name: ToSyntaxData()
  nameWithType: Statement.ToSyntaxData()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData()
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: ToSyntaxData
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statement.cs
    startLine: 66
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nStatementからSyntaxDataを生成して返します。\n"
  example: []
  syntax:
    content: public virtual SyntaxData ToSyntaxData()
    return:
      type: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
      description: ''
    content.vb: Public Overridable Function ToSyntaxData As SyntaxData
  overload: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Bve5_Parsing.MapGrammar.EvaluateData
  commentId: N:Bve5_Parsing.MapGrammar.EvaluateData
  name: Bve5_Parsing.MapGrammar.EvaluateData
  nameWithType: Bve5_Parsing.MapGrammar.EvaluateData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  name: ElementName
  nameWithType: Statement.ElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
- uid: Bve5_Parsing.MapGrammar.MapElementName
  commentId: T:Bve5_Parsing.MapGrammar.MapElementName
  parent: Bve5_Parsing.MapGrammar
  name: MapElementName
  nameWithType: MapElementName
  fullName: Bve5_Parsing.MapGrammar.MapElementName
- uid: Bve5_Parsing.MapGrammar
  commentId: N:Bve5_Parsing.MapGrammar
  name: Bve5_Parsing.MapGrammar
  nameWithType: Bve5_Parsing.MapGrammar
  fullName: Bve5_Parsing.MapGrammar
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  name: FunctionName
  nameWithType: Statement.FunctionName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
- uid: Bve5_Parsing.MapGrammar.MapFunctionName
  commentId: T:Bve5_Parsing.MapGrammar.MapFunctionName
  parent: Bve5_Parsing.MapGrammar
  name: MapFunctionName
  nameWithType: MapFunctionName
  fullName: Bve5_Parsing.MapGrammar.MapFunctionName
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  name: HasKey
  nameWithType: Statement.HasKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  name: HasSubElement
  nameWithType: Statement.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  name: Distance
  nameWithType: Statement.Distance
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.#ctor
  name: Statement
  nameWithType: Statement.Statement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Statement
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  name: GetAllArguments
  nameWithType: Statement.GetAllArguments
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyInfo>
  nameWithType: IEnumerable<PropertyInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  nameWithType.vb: IEnumerable(Of PropertyInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.PropertyInfo)
  name.vb: IEnumerable(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  name: ToSyntaxData
  nameWithType: Statement.ToSyntaxData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
- uid: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
  commentId: T:Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
  parent: Bve5_Parsing.MapGrammar.EvaluateData
  name: SyntaxData
  nameWithType: SyntaxData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
