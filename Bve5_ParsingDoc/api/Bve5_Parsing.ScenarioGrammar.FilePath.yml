### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.ScenarioGrammar.FilePath
  commentId: T:Bve5_Parsing.ScenarioGrammar.FilePath
  id: FilePath
  parent: Bve5_Parsing.ScenarioGrammar
  children:
  - Bve5_Parsing.ScenarioGrammar.FilePath.Value
  - Bve5_Parsing.ScenarioGrammar.FilePath.Weight
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: FilePath
  fullName: Bve5_Parsing.ScenarioGrammar.FilePath
  type: Struct
  source:
    remote:
      path: Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: FilePath
    path: ../Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
    startLine: 191
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.ScenarioGrammar
  summary: "\nファイルパス構造体\n"
  example: []
  syntax:
    content: public struct FilePath
    content.vb: Public Structure FilePath
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Bve5_Parsing.ScenarioGrammar.FilePath.Value
  commentId: P:Bve5_Parsing.ScenarioGrammar.FilePath.Value
  id: Value
  parent: Bve5_Parsing.ScenarioGrammar.FilePath
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FilePath.Value
  fullName: Bve5_Parsing.ScenarioGrammar.FilePath.Value
  type: Property
  source:
    remote:
      path: Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Value
    path: ../Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
    startLine: 193
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.ScenarioGrammar
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Bve5_Parsing.ScenarioGrammar.FilePath.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Bve5_Parsing.ScenarioGrammar.FilePath.Weight
  commentId: P:Bve5_Parsing.ScenarioGrammar.FilePath.Weight
  id: Weight
  parent: Bve5_Parsing.ScenarioGrammar.FilePath
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: FilePath.Weight
  fullName: Bve5_Parsing.ScenarioGrammar.FilePath.Weight
  type: Property
  source:
    remote:
      path: Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Weight
    path: ../Bve5_Parsing/ScenarioGrammar/ScenarioData.cs
    startLine: 194
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.ScenarioGrammar
  syntax:
    content: public double Weight { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Weight As Double
  overload: Bve5_Parsing.ScenarioGrammar.FilePath.Weight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Bve5_Parsing.ScenarioGrammar
  commentId: N:Bve5_Parsing.ScenarioGrammar
  name: Bve5_Parsing.ScenarioGrammar
  nameWithType: Bve5_Parsing.ScenarioGrammar
  fullName: Bve5_Parsing.ScenarioGrammar
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.ScenarioGrammar.FilePath.Value*
  commentId: Overload:Bve5_Parsing.ScenarioGrammar.FilePath.Value
  name: Value
  nameWithType: FilePath.Value
  fullName: Bve5_Parsing.ScenarioGrammar.FilePath.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Bve5_Parsing.ScenarioGrammar.FilePath.Weight*
  commentId: Overload:Bve5_Parsing.ScenarioGrammar.FilePath.Weight
  name: Weight
  nameWithType: FilePath.Weight
  fullName: Bve5_Parsing.ScenarioGrammar.FilePath.Weight
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
