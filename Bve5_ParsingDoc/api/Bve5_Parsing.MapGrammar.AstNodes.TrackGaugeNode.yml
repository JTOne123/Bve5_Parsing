### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  id: TrackGaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  children:
  - Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  - Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
  - Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
  - Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
  - Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
  langs:
  - csharp
  - vb
  name: TrackGaugeNode
  nameWithType: TrackGaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: TrackGaugeNode
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 888
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\nTrack[TrackKey].Gauge(Gauge);\n"
  example: []
  syntax:
    content: 'public class TrackGaugeNode : TrackCantSetgaugeNode'
    content.vb: >-
      Public Class TrackGaugeNode

          Inherits TrackCantSetgaugeNode
  inheritance:
  - System.Object
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  - Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  inheritedMembers:
  - Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.SubElementName
  - Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Key
  - Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Gauge
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor,Antlr4.Runtime.ParserRuleContext,Bve5_Parsing.MapGrammar.MapElementName,System.String,System.String)
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor,Bve5_Parsing.MapGrammar.EvaluateData.Statement)
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
  id: ElementName
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: TrackGaugeNode.ElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: ElementName
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 896
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\nマップ要素名\n"
  example: []
  syntax:
    content: public override MapElementName ElementName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapElementName
    content.vb: Public Overrides ReadOnly Property ElementName As MapElementName
  overridden: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.ElementName
  overload: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
  id: FunctionName
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  langs:
  - csharp
  - vb
  name: FunctionName
  nameWithType: TrackGaugeNode.FunctionName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: FunctionName
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 901
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\n関数名\n"
  example: []
  syntax:
    content: public override MapFunctionName FunctionName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapFunctionName
    content.vb: Public Overrides ReadOnly Property FunctionName As MapFunctionName
  overridden: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.FunctionName
  overload: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
  id: HasKey
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  langs:
  - csharp
  - vb
  name: HasKey
  nameWithType: TrackGaugeNode.HasKey
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasKey
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 906
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\nキーを指定する構文か？\n"
  example: []
  syntax:
    content: public override bool HasKey { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasKey As Boolean
  overridden: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasKey
  overload: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
  id: HasSubElement
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  langs:
  - csharp
  - vb
  name: HasSubElement
  nameWithType: TrackGaugeNode.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasSubElement
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 911
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\n副要素を指定する構文か？\n"
  example: []
  syntax:
    content: public override bool HasSubElement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasSubElement As Boolean
  overridden: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasSubElement
  overload: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  id: '#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)'
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  langs:
  - csharp
  - vb
  name: TrackGaugeNode(IToken, IToken)
  nameWithType: TrackGaugeNode.TrackGaugeNode(IToken, IToken)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.TrackGaugeNode(Antlr4.Runtime.IToken, Antlr4.Runtime.IToken)
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/SyntaxNodes.cs
    startLine: 919
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\n新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public TrackGaugeNode(IToken start, IToken stop)
    parameters:
    - id: start
      type: Antlr4.Runtime.IToken
      description: ''
    - id: stop
      type: Antlr4.Runtime.IToken
      description: ''
    content.vb: Public Sub New(start As IToken, stop As IToken)
  overload: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Bve5_Parsing.MapGrammar.AstNodes
  commentId: N:Bve5_Parsing.MapGrammar.AstNodes
  name: Bve5_Parsing.MapGrammar.AstNodes
  nameWithType: Bve5_Parsing.MapGrammar.AstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: MapGrammarAstNodes
  nameWithType: MapGrammarAstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantSetgaugeNode
  nameWithType: TrackCantSetgaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.SubElementName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.SubElementName
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: SubElementName
  nameWithType: TrackCantSetgaugeNode.SubElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.SubElementName
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Key
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Key
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: Key
  nameWithType: TrackCantSetgaugeNode.Key
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Key
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Gauge
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Gauge
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: Gauge
  nameWithType: TrackCantSetgaugeNode.Gauge
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.Gauge
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  name: GetAllArguments()
  nameWithType: SyntaxNode.GetAllArguments()
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments()
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
    name: GetAllArguments
    nameWithType: SyntaxNode.GetAllArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
    name: GetAllArguments
    nameWithType: SyntaxNode.GetAllArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetAllArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  name: GetNonOptionalArguments()
  nameWithType: SyntaxNode.GetNonOptionalArguments()
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments()
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
    name: GetNonOptionalArguments
    nameWithType: SyntaxNode.GetNonOptionalArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
    name: GetNonOptionalArguments
    nameWithType: SyntaxNode.GetNonOptionalArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetNonOptionalArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  name: GetOptionalArguments()
  nameWithType: SyntaxNode.GetOptionalArguments()
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments()
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
    name: GetOptionalArguments
    nameWithType: SyntaxNode.GetOptionalArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
    name: GetOptionalArguments
    nameWithType: SyntaxNode.GetOptionalArguments
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.GetOptionalArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor,Antlr4.Runtime.ParserRuleContext,Bve5_Parsing.MapGrammar.MapElementName,System.String,System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor,Antlr4.Runtime.ParserRuleContext,Bve5_Parsing.MapGrammar.MapElementName,System.String,System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  isExternal: true
  name: CreateSyntaxAstNode(BuildAstVisitor, ParserRuleContext, MapElementName, String, String)
  nameWithType: SyntaxNode.CreateSyntaxAstNode(BuildAstVisitor, ParserRuleContext, MapElementName, String, String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor, Antlr4.Runtime.ParserRuleContext, Bve5_Parsing.MapGrammar.MapElementName, System.String, System.String)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor,Antlr4.Runtime.ParserRuleContext,Bve5_Parsing.MapGrammar.MapElementName,System.String,System.String)
    name: CreateSyntaxAstNode
    nameWithType: SyntaxNode.CreateSyntaxAstNode
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor
    name: BuildAstVisitor
    nameWithType: BuildAstVisitor
    fullName: Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Antlr4.Runtime.ParserRuleContext
    name: ParserRuleContext
    nameWithType: ParserRuleContext
    fullName: Antlr4.Runtime.ParserRuleContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.MapElementName
    name: MapElementName
    nameWithType: MapElementName
    fullName: Bve5_Parsing.MapGrammar.MapElementName
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode(Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor,Antlr4.Runtime.ParserRuleContext,Bve5_Parsing.MapGrammar.MapElementName,System.String,System.String)
    name: CreateSyntaxAstNode
    nameWithType: SyntaxNode.CreateSyntaxAstNode
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateSyntaxAstNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor
    name: BuildAstVisitor
    nameWithType: BuildAstVisitor
    fullName: Bve5_Parsing.MapGrammar.AstNodes.BuildAstVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Antlr4.Runtime.ParserRuleContext
    name: ParserRuleContext
    nameWithType: ParserRuleContext
    fullName: Antlr4.Runtime.ParserRuleContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.MapElementName
    name: MapElementName
    nameWithType: MapElementName
    fullName: Bve5_Parsing.MapGrammar.MapElementName
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor,Bve5_Parsing.MapGrammar.EvaluateData.Statement)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor,Bve5_Parsing.MapGrammar.EvaluateData.Statement)
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  name: SetArgument(EvaluateMapGrammarVisitor, Statement)
  nameWithType: SyntaxNode.SetArgument(EvaluateMapGrammarVisitor, Statement)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor, Bve5_Parsing.MapGrammar.EvaluateData.Statement)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor,Bve5_Parsing.MapGrammar.EvaluateData.Statement)
    name: SetArgument
    nameWithType: SyntaxNode.SetArgument
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
    name: EvaluateMapGrammarVisitor
    nameWithType: EvaluateMapGrammarVisitor
    fullName: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement
    name: Statement
    nameWithType: Statement
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor,Bve5_Parsing.MapGrammar.EvaluateData.Statement)
    name: SetArgument
    nameWithType: SyntaxNode.SetArgument
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.SetArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
    name: EvaluateMapGrammarVisitor
    nameWithType: EvaluateMapGrammarVisitor
    fullName: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement
    name: Statement
    nameWithType: Statement
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
  parent: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  name: CreateStatement(EvaluateMapGrammarVisitor)
  nameWithType: SyntaxNode.CreateStatement(EvaluateMapGrammarVisitor)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
    name: CreateStatement
    nameWithType: SyntaxNode.CreateStatement
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
    name: EvaluateMapGrammarVisitor
    nameWithType: EvaluateMapGrammarVisitor
    fullName: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement(Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor)
    name: CreateStatement
    nameWithType: SyntaxNode.CreateStatement
    fullName: Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode.CreateStatement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
    name: EvaluateMapGrammarVisitor
    nameWithType: EvaluateMapGrammarVisitor
    fullName: Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  name: Start
  nameWithType: MapGrammarAstNodes.Start
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  name: Stop
  nameWithType: MapGrammarAstNodes.Stop
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  isExternal: true
  name: CreateNewWarning(String)
  nameWithType: MapGrammarAstNodes.CreateNewWarning(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
    name: CreateNewWarning
    nameWithType: MapGrammarAstNodes.CreateNewWarning
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
    name: CreateNewWarning
    nameWithType: MapGrammarAstNodes.CreateNewWarning
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  isExternal: true
  name: CreateNewError(String)
  nameWithType: MapGrammarAstNodes.CreateNewError(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
    name: CreateNewError
    nameWithType: MapGrammarAstNodes.CreateNewError
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
    name: CreateNewError
    nameWithType: MapGrammarAstNodes.CreateNewError
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.ElementName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.ElementName
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: ElementName
  nameWithType: TrackCantSetgaugeNode.ElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.ElementName
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
  name: ElementName
  nameWithType: TrackGaugeNode.ElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.ElementName
- uid: Bve5_Parsing.MapGrammar.MapElementName
  commentId: T:Bve5_Parsing.MapGrammar.MapElementName
  parent: Bve5_Parsing.MapGrammar
  name: MapElementName
  nameWithType: MapElementName
  fullName: Bve5_Parsing.MapGrammar.MapElementName
- uid: Bve5_Parsing.MapGrammar
  commentId: N:Bve5_Parsing.MapGrammar
  name: Bve5_Parsing.MapGrammar
  nameWithType: Bve5_Parsing.MapGrammar
  fullName: Bve5_Parsing.MapGrammar
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.FunctionName
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: FunctionName
  nameWithType: TrackCantSetgaugeNode.FunctionName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.FunctionName
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
  name: FunctionName
  nameWithType: TrackGaugeNode.FunctionName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.FunctionName
- uid: Bve5_Parsing.MapGrammar.MapFunctionName
  commentId: T:Bve5_Parsing.MapGrammar.MapFunctionName
  parent: Bve5_Parsing.MapGrammar
  name: MapFunctionName
  nameWithType: MapFunctionName
  fullName: Bve5_Parsing.MapGrammar.MapFunctionName
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasKey
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasKey
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: HasKey
  nameWithType: TrackCantSetgaugeNode.HasKey
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasKey
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
  name: HasKey
  nameWithType: TrackGaugeNode.HasKey
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasSubElement
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasSubElement
  parent: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  name: HasSubElement
  nameWithType: TrackCantSetgaugeNode.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode.HasSubElement
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
  name: HasSubElement
  nameWithType: TrackGaugeNode.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.HasSubElement
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.#ctor
  name: TrackGaugeNode
  nameWithType: TrackGaugeNode.TrackGaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode.TrackGaugeNode
- uid: Antlr4.Runtime.IToken
  commentId: T:Antlr4.Runtime.IToken
  parent: Antlr4.Runtime
  isExternal: true
  name: IToken
  nameWithType: IToken
  fullName: Antlr4.Runtime.IToken
- uid: Antlr4.Runtime
  commentId: N:Antlr4.Runtime
  isExternal: true
  name: Antlr4.Runtime
  nameWithType: Antlr4.Runtime
  fullName: Antlr4.Runtime
