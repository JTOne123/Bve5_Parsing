### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  id: MapGrammarAstNodes
  parent: Bve5_Parsing.MapGrammar.AstNodes
  children:
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  langs:
  - csharp
  - vb
  name: MapGrammarAstNodes
  nameWithType: MapGrammarAstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: MapGrammarAstNodes
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 7
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\nAST親クラス\n"
  example: []
  syntax:
    content: public abstract class MapGrammarAstNodes
    content.vb: Public MustInherit Class MapGrammarAstNodes
  inheritance:
  - System.Object
  derivedClasses:
  - Bve5_Parsing.MapGrammar.AstNodes.Atan2Node
  - Bve5_Parsing.MapGrammar.AstNodes.DistanceNode
  - Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode
  - Bve5_Parsing.MapGrammar.AstNodes.IncludeNode
  - Bve5_Parsing.MapGrammar.AstNodes.InfixExpressionNode
  - Bve5_Parsing.MapGrammar.AstNodes.LoadListNode
  - Bve5_Parsing.MapGrammar.AstNodes.NumberNode
  - Bve5_Parsing.MapGrammar.AstNodes.PowNode
  - Bve5_Parsing.MapGrammar.AstNodes.RootNode
  - Bve5_Parsing.MapGrammar.AstNodes.SingleArgFunctionNode
  - Bve5_Parsing.MapGrammar.AstNodes.StringNode
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node
  - Bve5_Parsing.MapGrammar.AstNodes.SyntaxNode
  - Bve5_Parsing.MapGrammar.AstNodes.UnaryNode
  - Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode
  - Bve5_Parsing.MapGrammar.AstNodes.VarNode
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  id: Start
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: MapGrammarAstNodes.Start
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Start
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 9
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public IToken Start { get; set; }
    parameters: []
    return:
      type: Antlr4.Runtime.IToken
    content.vb: Public Property Start As IToken
  overload: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  id: Stop
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  langs:
  - csharp
  - vb
  name: Stop
  nameWithType: MapGrammarAstNodes.Stop
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Stop
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 10
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public IToken Stop { get; set; }
    parameters: []
    return:
      type: Antlr4.Runtime.IToken
    content.vb: Public Property Stop As IToken
  overload: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  id: '#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)'
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  langs:
  - csharp
  - vb
  name: MapGrammarAstNodes(IToken, IToken)
  nameWithType: MapGrammarAstNodes.MapGrammarAstNodes(IToken, IToken)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.MapGrammarAstNodes(Antlr4.Runtime.IToken, Antlr4.Runtime.IToken)
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 12
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public MapGrammarAstNodes(IToken start, IToken stop)
    parameters:
    - id: start
      type: Antlr4.Runtime.IToken
    - id: stop
      type: Antlr4.Runtime.IToken
    content.vb: Public Sub New(start As IToken, stop As IToken)
  overload: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  id: CreateNewWarning(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  langs:
  - csharp
  - vb
  name: CreateNewWarning(String)
  nameWithType: MapGrammarAstNodes.CreateNewWarning(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: CreateNewWarning
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 18
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public ParseError CreateNewWarning(string msg)
    parameters:
    - id: msg
      type: System.String
    return:
      type: Bve5_Parsing.ParseError
    content.vb: Public Function CreateNewWarning(msg As String) As ParseError
  overload: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  id: CreateNewError(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  langs:
  - csharp
  - vb
  name: CreateNewError(String)
  nameWithType: MapGrammarAstNodes.CreateNewError(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
      branch: master
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: CreateNewError
    path: ../Bve5_Parsing/MapGrammar/AstNodes/MapGrammarAstNode.cs
    startLine: 23
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public ParseError CreateNewError(string msg)
    parameters:
    - id: msg
      type: System.String
    return:
      type: Bve5_Parsing.ParseError
    content.vb: Public Function CreateNewError(msg As String) As ParseError
  overload: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Bve5_Parsing.MapGrammar.AstNodes
  commentId: N:Bve5_Parsing.MapGrammar.AstNodes
  name: Bve5_Parsing.MapGrammar.AstNodes
  nameWithType: Bve5_Parsing.MapGrammar.AstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  name: Start
  nameWithType: MapGrammarAstNodes.Start
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
- uid: Antlr4.Runtime.IToken
  commentId: T:Antlr4.Runtime.IToken
  parent: Antlr4.Runtime
  isExternal: true
  name: IToken
  nameWithType: IToken
  fullName: Antlr4.Runtime.IToken
- uid: Antlr4.Runtime
  commentId: N:Antlr4.Runtime
  isExternal: true
  name: Antlr4.Runtime
  nameWithType: Antlr4.Runtime
  fullName: Antlr4.Runtime
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  name: Stop
  nameWithType: MapGrammarAstNodes.Stop
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.#ctor
  name: MapGrammarAstNodes
  nameWithType: MapGrammarAstNodes.MapGrammarAstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.MapGrammarAstNodes
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
  name: CreateNewWarning
  nameWithType: MapGrammarAstNodes.CreateNewWarning
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Bve5_Parsing.ParseError
  commentId: T:Bve5_Parsing.ParseError
  parent: Bve5_Parsing
  name: ParseError
  nameWithType: ParseError
  fullName: Bve5_Parsing.ParseError
- uid: Bve5_Parsing
  commentId: N:Bve5_Parsing
  name: Bve5_Parsing
  nameWithType: Bve5_Parsing
  fullName: Bve5_Parsing
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
  name: CreateNewError
  nameWithType: MapGrammarAstNodes.CreateNewError
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
