### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  id: Syntax2Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  children:
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
  - Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
  langs:
  - csharp
  - vb
  name: Syntax2Node
  nameWithType: Syntax2Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Syntax2Node
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 431
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  summary: "\nステートメントノード2 MapElement[key].Function(Args)\n"
  example: []
  syntax:
    content: 'public class Syntax2Node : MapGrammarAstNodes'
    content.vb: >-
      Public Class Syntax2Node

          Inherits MapGrammarAstNodes
  inheritance:
  - System.Object
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  inheritedMembers:
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  - Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
  id: MapElementName
  parent: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  langs:
  - csharp
  - vb
  name: MapElementName
  nameWithType: Syntax2Node.MapElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: MapElementName
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 433
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public string MapElementName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MapElementName As String
  overload: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
  id: Key
  parent: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Syntax2Node.Key
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Key
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 434
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public MapGrammarAstNodes Key { get; set; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
    content.vb: Public Property Key As MapGrammarAstNodes
  overload: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
  id: FunctionName
  parent: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  langs:
  - csharp
  - vb
  name: FunctionName
  nameWithType: Syntax2Node.FunctionName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: FunctionName
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 435
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public string FunctionName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FunctionName As String
  overload: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
  id: Arguments
  parent: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: Syntax2Node.Arguments
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Arguments
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 436
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public Dictionary<string, MapGrammarAstNodes> Arguments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes}
    content.vb: Public Property Arguments As Dictionary(Of String, MapGrammarAstNodes)
  overload: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)
  id: '#ctor(Antlr4.Runtime.IToken,Antlr4.Runtime.IToken)'
  parent: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  langs:
  - csharp
  - vb
  name: Syntax2Node(IToken, IToken)
  nameWithType: Syntax2Node.Syntax2Node(IToken, IToken)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Syntax2Node(Antlr4.Runtime.IToken, Antlr4.Runtime.IToken)
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
      branch: update_doc
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AstNodes.cs
    startLine: 438
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.AstNodes
  syntax:
    content: public Syntax2Node(IToken start, IToken stop)
    parameters:
    - id: start
      type: Antlr4.Runtime.IToken
    - id: stop
      type: Antlr4.Runtime.IToken
    content.vb: Public Sub New(start As IToken, stop As IToken)
  overload: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Bve5_Parsing.MapGrammar.AstNodes
  commentId: N:Bve5_Parsing.MapGrammar.AstNodes
  name: Bve5_Parsing.MapGrammar.AstNodes
  nameWithType: Bve5_Parsing.MapGrammar.AstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: MapGrammarAstNodes
  nameWithType: MapGrammarAstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  name: Start
  nameWithType: MapGrammarAstNodes.Start
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Start
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  commentId: P:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  name: Stop
  nameWithType: MapGrammarAstNodes.Stop
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.Stop
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  isExternal: true
  name: CreateNewWarning(String)
  nameWithType: MapGrammarAstNodes.CreateNewWarning(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
    name: CreateNewWarning
    nameWithType: MapGrammarAstNodes.CreateNewWarning
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning(System.String)
    name: CreateNewWarning
    nameWithType: MapGrammarAstNodes.CreateNewWarning
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  parent: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  isExternal: true
  name: CreateNewError(String)
  nameWithType: MapGrammarAstNodes.CreateNewError(String)
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
    name: CreateNewError
    nameWithType: MapGrammarAstNodes.CreateNewError
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError(System.String)
    name: CreateNewError
    nameWithType: MapGrammarAstNodes.CreateNewError
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes.CreateNewError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
  name: MapElementName
  nameWithType: Syntax2Node.MapElementName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.MapElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
  name: Key
  nameWithType: Syntax2Node.Key
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Key
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
  name: FunctionName
  nameWithType: Syntax2Node.FunctionName
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.FunctionName
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
  name: Arguments
  nameWithType: Syntax2Node.Arguments
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Arguments
- uid: System.Collections.Generic.Dictionary{System.String,Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, MapGrammarAstNodes>
  nameWithType: Dictionary<String, MapGrammarAstNodes>
  fullName: System.Collections.Generic.Dictionary<System.String, Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes>
  nameWithType.vb: Dictionary(Of String, MapGrammarAstNodes)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  name.vb: Dictionary(Of String, MapGrammarAstNodes)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
    name: MapGrammarAstNodes
    nameWithType: MapGrammarAstNodes
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
    name: MapGrammarAstNodes
    nameWithType: MapGrammarAstNodes
    fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.#ctor
  name: Syntax2Node
  nameWithType: Syntax2Node.Syntax2Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node.Syntax2Node
- uid: Antlr4.Runtime.IToken
  commentId: T:Antlr4.Runtime.IToken
  parent: Antlr4.Runtime
  isExternal: true
  name: IToken
  nameWithType: IToken
  fullName: Antlr4.Runtime.IToken
- uid: Antlr4.Runtime
  commentId: N:Antlr4.Runtime
  isExternal: true
  name: Antlr4.Runtime
  nameWithType: Antlr4.Runtime
  fullName: Antlr4.Runtime
