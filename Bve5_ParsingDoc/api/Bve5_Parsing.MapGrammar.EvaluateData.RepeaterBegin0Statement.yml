### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  commentId: T:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  id: RepeaterBegin0Statement
  parent: Bve5_Parsing.MapGrammar.EvaluateData
  children:
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor(System.Double)
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement._structureKeys
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey(System.String)
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey(System.String[])
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData
  - Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
  langs:
  - csharp
  - vb
  name: RepeaterBegin0Statement
  nameWithType: RepeaterBegin0Statement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: RepeaterBegin0Statement
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 56
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nRepeater[RepeaterKey].Begin0(TrackKey, Tilt, Span, Interval);\n"
  example: []
  syntax:
    content: 'public class RepeaterBegin0Statement : Statement'
    content.vb: >-
      Public Class RepeaterBegin0Statement
          Inherits Statement
  inheritance:
  - System.Object
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement
  inheritedMembers:
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.SubElementName
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  - Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
  id: ElementName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: RepeaterBegin0Statement.ElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: ElementName
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1837
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nマップ要素名\n"
  example: []
  syntax:
    content: public override MapElementName ElementName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapElementName
    content.vb: Public Overrides ReadOnly Property ElementName As MapElementName
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
  id: FunctionName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: FunctionName
  nameWithType: RepeaterBegin0Statement.FunctionName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: FunctionName
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1842
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n関数名\n"
  example: []
  syntax:
    content: public override MapFunctionName FunctionName { get; }
    parameters: []
    return:
      type: Bve5_Parsing.MapGrammar.MapFunctionName
    content.vb: Public Overrides ReadOnly Property FunctionName As MapFunctionName
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
  id: HasKey
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: HasKey
  nameWithType: RepeaterBegin0Statement.HasKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasKey
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1847
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nキーを指定する構文か？\n"
  example: []
  syntax:
    content: public override bool HasKey { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasKey As Boolean
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
  id: HasSubElement
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: HasSubElement
  nameWithType: RepeaterBegin0Statement.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: HasSubElement
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1852
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n副要素を指定する構文か？\n"
  example: []
  syntax:
    content: public override bool HasSubElement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasSubElement As Boolean
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
  id: Key
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: RepeaterBegin0Statement.Key
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Key
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1858
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nKey：RepeaterKey\n"
  example: []
  syntax:
    content: public override string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Key As String
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Key
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
  id: TrackKey
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: TrackKey
  nameWithType: RepeaterBegin0Statement.TrackKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: TrackKey
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1865
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n引数：配置先の軌道名 (0: 自軌道)\n"
  example: []
  syntax:
    content: public string TrackKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TrackKey As String
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
  id: Tilt
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: Tilt
  nameWithType: RepeaterBegin0Statement.Tilt
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Tilt
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1871
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n引数：傾斜オプション (0: 常に水平, 1: 勾配に連動, 2: カントに連動, 3: 勾配とカントに連動)\n"
  example: []
  syntax:
    content: public double? Tilt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Tilt As Double?
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
  id: Span
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: Span
  nameWithType: RepeaterBegin0Statement.Span
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Span
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1877
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n引数：曲線における弦の長さ [m]\n"
  example: []
  syntax:
    content: public double? Span { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Span As Double?
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
  id: Interval
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: RepeaterBegin0Statement.Interval
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Interval
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1883
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n引数：配置間隔 [m]\n"
  example: []
  syntax:
    content: public double? Interval { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Interval As Double?
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor
  id: '#ctor'
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: RepeaterBegin0Statement()
  nameWithType: RepeaterBegin0Statement.RepeaterBegin0Statement()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.RepeaterBegin0Statement()
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1890
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public RepeaterBegin0Statement()
    content.vb: Public Sub New
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor(System.Double)
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: RepeaterBegin0Statement(Double)
  nameWithType: RepeaterBegin0Statement.RepeaterBegin0Statement(Double)
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.RepeaterBegin0Statement(System.Double)
  type: Constructor
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: .ctor
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/AutoGen/Statements.cs
    startLine: 1895
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\n距離程を指定して新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public RepeaterBegin0Statement(double distance)
    parameters:
    - id: distance
      type: System.Double
    content.vb: Public Sub New(distance As Double)
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement._structureKeys
  commentId: F:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement._structureKeys
  id: _structureKeys
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: _structureKeys
  nameWithType: RepeaterBegin0Statement._structureKeys
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement._structureKeys
  type: Field
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: _structureKeys
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 58
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  syntax:
    content: protected List<string> _structureKeys
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected _structureKeys As List(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
  id: StructureKeys
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: StructureKeys
  nameWithType: RepeaterBegin0Statement.StructureKeys
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
  type: Property
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: StructureKeys
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 63
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nStructureKeyN\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<string> StructureKeys { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
    content.vb: Public ReadOnly Property StructureKeys As ReadOnlyCollection(Of String)
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey(System.String[])
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey(System.String[])
  id: SetStrKey(System.String[])
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: SetStrKey(String[])
  nameWithType: RepeaterBegin0Statement.SetStrKey(String[])
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey(System.String[])
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: SetStrKey
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 70
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nStructureKeyに値をセットします。\nテスト用\n"
  example: []
  syntax:
    content: public Statement SetStrKey(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: ''
    return:
      type: Bve5_Parsing.MapGrammar.EvaluateData.Statement
    content.vb: Public Function SetStrKey(ParamArray keys As String()) As Statement
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey*
  nameWithType.vb: RepeaterBegin0Statement.SetStrKey(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey(System.String())
  name.vb: SetStrKey(String())
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData
  id: ToSyntaxData
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: ToSyntaxData()
  nameWithType: RepeaterBegin0Statement.ToSyntaxData()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData()
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: ToSyntaxData
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 81
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  summary: "\nStatementからSyntaxDataを生成して返します。\n可変長のStructureKeys対応\n"
  example: []
  syntax:
    content: public override SyntaxData ToSyntaxData()
    return:
      type: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
      description: ''
    content.vb: Public Overrides Function ToSyntaxData As SyntaxData
  overridden: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey(System.String)
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey(System.String)
  id: AddStructureKey(System.String)
  parent: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement
  langs:
  - csharp
  - vb
  name: AddStructureKey(String)
  nameWithType: RepeaterBegin0Statement.AddStructureKey(String)
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey(System.String)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
<<<<<<< HEAD
      branch: master
=======
      branch: support_oldsyntax
>>>>>>> origin/support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: AddStructureKey
    path: ../Bve5_Parsing/MapGrammar/EvaluateData/Statements.cs
    startLine: 93
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar.EvaluateData
  syntax:
    content: public void AddStructureKey(string strKey)
    parameters:
    - id: strKey
      type: System.String
    content.vb: Public Sub AddStructureKey(strKey As String)
  overload: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Bve5_Parsing.MapGrammar.EvaluateData
  commentId: N:Bve5_Parsing.MapGrammar.EvaluateData
  name: Bve5_Parsing.MapGrammar.EvaluateData
  nameWithType: Bve5_Parsing.MapGrammar.EvaluateData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  commentId: T:Bve5_Parsing.MapGrammar.EvaluateData.Statement
  parent: Bve5_Parsing.MapGrammar.EvaluateData
  name: Statement
  nameWithType: Statement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.SubElementName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.SubElementName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: SubElementName
  nameWithType: Statement.SubElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.SubElementName
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: Distance
  nameWithType: Statement.Distance
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Distance
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: GetAllArguments()
  nameWithType: Statement.GetAllArguments()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments()
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
    name: GetAllArguments
    nameWithType: Statement.GetAllArguments
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
    name: GetAllArguments
    nameWithType: Statement.GetAllArguments
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.GetAllArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: ElementName
  nameWithType: Statement.ElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ElementName
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
  name: ElementName
  nameWithType: RepeaterBegin0Statement.ElementName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ElementName
- uid: Bve5_Parsing.MapGrammar.MapElementName
  commentId: T:Bve5_Parsing.MapGrammar.MapElementName
  parent: Bve5_Parsing.MapGrammar
  name: MapElementName
  nameWithType: MapElementName
  fullName: Bve5_Parsing.MapGrammar.MapElementName
- uid: Bve5_Parsing.MapGrammar
  commentId: N:Bve5_Parsing.MapGrammar
  name: Bve5_Parsing.MapGrammar
  nameWithType: Bve5_Parsing.MapGrammar
  fullName: Bve5_Parsing.MapGrammar
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: FunctionName
  nameWithType: Statement.FunctionName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.FunctionName
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
  name: FunctionName
  nameWithType: RepeaterBegin0Statement.FunctionName
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.FunctionName
- uid: Bve5_Parsing.MapGrammar.MapFunctionName
  commentId: T:Bve5_Parsing.MapGrammar.MapFunctionName
  parent: Bve5_Parsing.MapGrammar
  name: MapFunctionName
  nameWithType: MapFunctionName
  fullName: Bve5_Parsing.MapGrammar.MapFunctionName
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: HasKey
  nameWithType: Statement.HasKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasKey
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
  name: HasKey
  nameWithType: RepeaterBegin0Statement.HasKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: HasSubElement
  nameWithType: Statement.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.HasSubElement
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
  name: HasSubElement
  nameWithType: RepeaterBegin0Statement.HasSubElement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.HasSubElement
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Key
  commentId: P:Bve5_Parsing.MapGrammar.EvaluateData.Statement.Key
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: Key
  nameWithType: Statement.Key
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.Key
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
  name: Key
  nameWithType: RepeaterBegin0Statement.Key
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
  name: TrackKey
  nameWithType: RepeaterBegin0Statement.TrackKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.TrackKey
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
  name: Tilt
  nameWithType: RepeaterBegin0Statement.Tilt
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Tilt
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
  name: Span
  nameWithType: RepeaterBegin0Statement.Span
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Span
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
  name: Interval
  nameWithType: RepeaterBegin0Statement.Interval
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.Interval
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.#ctor
  name: RepeaterBegin0Statement
  nameWithType: RepeaterBegin0Statement.RepeaterBegin0Statement
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.RepeaterBegin0Statement
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
  name: StructureKeys
  nameWithType: RepeaterBegin0Statement.StructureKeys
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.StructureKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey
  name: SetStrKey
  nameWithType: RepeaterBegin0Statement.SetStrKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.SetStrKey
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  commentId: M:Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  parent: Bve5_Parsing.MapGrammar.EvaluateData.Statement
  name: ToSyntaxData()
  nameWithType: Statement.ToSyntaxData()
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData()
  spec.csharp:
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
    name: ToSyntaxData
    nameWithType: Statement.ToSyntaxData
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
    name: ToSyntaxData
    nameWithType: Statement.ToSyntaxData
    fullName: Bve5_Parsing.MapGrammar.EvaluateData.Statement.ToSyntaxData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData
  name: ToSyntaxData
  nameWithType: RepeaterBegin0Statement.ToSyntaxData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.ToSyntaxData
- uid: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
  commentId: T:Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
  parent: Bve5_Parsing.MapGrammar.EvaluateData
  name: SyntaxData
  nameWithType: SyntaxData
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.SyntaxData
- uid: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey*
  commentId: Overload:Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey
  name: AddStructureKey
  nameWithType: RepeaterBegin0Statement.AddStructureKey
  fullName: Bve5_Parsing.MapGrammar.EvaluateData.RepeaterBegin0Statement.AddStructureKey
