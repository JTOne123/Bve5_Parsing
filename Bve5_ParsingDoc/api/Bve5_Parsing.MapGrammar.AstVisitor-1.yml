### YamlMime:ManagedReference
items:
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1
  commentId: T:Bve5_Parsing.MapGrammar.AstVisitor`1
  id: AstVisitor`1
  parent: Bve5_Parsing.MapGrammar
  children:
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
  - Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
  langs:
  - csharp
  - vb
  name: AstVisitor<T>
  nameWithType: AstVisitor<T>
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>
  type: Class
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: AstVisitor
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 13
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  summary: "\nASTノードの評価クラス定義\n"
  example: []
  syntax:
    content: public abstract class AstVisitor<T>
    typeParameters:
    - id: T
      description: ASTノードの種類
    content.vb: Public MustInherit Class AstVisitor(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Bve5_Parsing.MapGrammar.EvaluateMapGrammarVisitor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AstVisitor(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T)
  name.vb: AstVisitor(Of T)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RootNode)
  nameWithType: AstVisitor<T>.Visit(RootNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 16
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RootNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RootNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RootNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RootNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RootNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(DistanceNode)
  nameWithType: AstVisitor<T>.Visit(DistanceNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 17
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(DistanceNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.DistanceNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As DistanceNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(DistanceNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveSetgaugeNode)
  nameWithType: AstVisitor<T>.Visit(CurveSetgaugeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 18
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveSetgaugeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveSetgaugeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveSetgaugeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveGaugeNode)
  nameWithType: AstVisitor<T>.Visit(CurveGaugeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 19
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveGaugeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveGaugeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveGaugeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveSetcenterNode)
  nameWithType: AstVisitor<T>.Visit(CurveSetcenterNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 20
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveSetcenterNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveSetcenterNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveSetcenterNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveSetfunctionNode)
  nameWithType: AstVisitor<T>.Visit(CurveSetfunctionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 21
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveSetfunctionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveSetfunctionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveSetfunctionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveBegintransitionNode)
  nameWithType: AstVisitor<T>.Visit(CurveBegintransitionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 22
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveBegintransitionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveBegintransitionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveBegintransitionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveBeginNode)
  nameWithType: AstVisitor<T>.Visit(CurveBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 23
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveBegincircularNode)
  nameWithType: AstVisitor<T>.Visit(CurveBegincircularNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 24
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveBegincircularNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveBegincircularNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveBegincircularNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveEndNode)
  nameWithType: AstVisitor<T>.Visit(CurveEndNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 25
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveEndNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveEndNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveEndNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(CurveInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 26
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CurveChangeNode)
  nameWithType: AstVisitor<T>.Visit(CurveChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 27
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CurveChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CurveChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CurveChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(GradientBegintransitionNode)
  nameWithType: AstVisitor<T>.Visit(GradientBegintransitionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 28
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(GradientBegintransitionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As GradientBegintransitionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(GradientBegintransitionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(GradientBeginNode)
  nameWithType: AstVisitor<T>.Visit(GradientBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 29
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(GradientBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As GradientBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(GradientBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(GradientBeginconstNode)
  nameWithType: AstVisitor<T>.Visit(GradientBeginconstNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 30
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(GradientBeginconstNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As GradientBeginconstNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(GradientBeginconstNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(GradientEndNode)
  nameWithType: AstVisitor<T>.Visit(GradientEndNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 31
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(GradientEndNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As GradientEndNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(GradientEndNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(GradientInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(GradientInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 32
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(GradientInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As GradientInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(GradientInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackXInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(TrackXInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 33
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackXInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackXInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackXInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackYInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(TrackYInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 34
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackYInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackYInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackYInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackPositionNode)
  nameWithType: AstVisitor<T>.Visit(TrackPositionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 35
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackPositionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackPositionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackPositionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantSetgaugeNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantSetgaugeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 36
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantSetgaugeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantSetgaugeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantSetgaugeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackGaugeNode)
  nameWithType: AstVisitor<T>.Visit(TrackGaugeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 37
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackGaugeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackGaugeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackGaugeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantSetcenterNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantSetcenterNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 38
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantSetcenterNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantSetcenterNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantSetcenterNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantSetfunctionNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantSetfunctionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 39
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantSetfunctionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantSetfunctionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantSetfunctionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantBegintransitionNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantBegintransitionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 40
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantBegintransitionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantBegintransitionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantBegintransitionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantBeginNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 41
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantEndNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantEndNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 42
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantEndNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantEndNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantEndNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 43
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrackCantNode)
  nameWithType: AstVisitor<T>.Visit(TrackCantNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 44
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrackCantNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrackCantNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrackCantNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StructureLoadNode)
  nameWithType: AstVisitor<T>.Visit(StructureLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 45
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StructureLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StructureLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StructureLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StructurePutNode)
  nameWithType: AstVisitor<T>.Visit(StructurePutNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 46
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StructurePutNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StructurePutNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StructurePutNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StructurePut0Node)
  nameWithType: AstVisitor<T>.Visit(StructurePut0Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 47
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StructurePut0Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StructurePut0Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StructurePut0Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StructurePutbetweenNode)
  nameWithType: AstVisitor<T>.Visit(StructurePutbetweenNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 48
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StructurePutbetweenNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StructurePutbetweenNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StructurePutbetweenNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RepeaterBeginNode)
  nameWithType: AstVisitor<T>.Visit(RepeaterBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 49
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RepeaterBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RepeaterBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RepeaterBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RepeaterBegin0Node)
  nameWithType: AstVisitor<T>.Visit(RepeaterBegin0Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 50
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RepeaterBegin0Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RepeaterBegin0Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RepeaterBegin0Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RepeaterEndNode)
  nameWithType: AstVisitor<T>.Visit(RepeaterEndNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 51
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RepeaterEndNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RepeaterEndNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RepeaterEndNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(BackgroundChangeNode)
  nameWithType: AstVisitor<T>.Visit(BackgroundChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 52
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(BackgroundChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As BackgroundChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(BackgroundChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StationLoadNode)
  nameWithType: AstVisitor<T>.Visit(StationLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 53
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StationLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StationLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StationLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StationPutNode)
  nameWithType: AstVisitor<T>.Visit(StationPutNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 54
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StationPutNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StationPutNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StationPutNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StationPutNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StationPutNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SectionBeginNode)
  nameWithType: AstVisitor<T>.Visit(SectionBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 55
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SectionBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SectionBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SectionBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SectionBeginnewNode)
  nameWithType: AstVisitor<T>.Visit(SectionBeginnewNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 56
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SectionBeginnewNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SectionBeginnewNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SectionBeginnewNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SectionSetspeedlimitNode)
  nameWithType: AstVisitor<T>.Visit(SectionSetspeedlimitNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 57
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SectionSetspeedlimitNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SectionSetspeedlimitNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SectionSetspeedlimitNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SignalSpeedlimitNode)
  nameWithType: AstVisitor<T>.Visit(SignalSpeedlimitNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 58
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SignalSpeedlimitNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SignalSpeedlimitNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SignalSpeedlimitNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SignalLoadNode)
  nameWithType: AstVisitor<T>.Visit(SignalLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 59
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SignalLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SignalLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SignalLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SignalPutNode)
  nameWithType: AstVisitor<T>.Visit(SignalPutNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 60
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SignalPutNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SignalPutNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SignalPutNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(BeaconPutNode)
  nameWithType: AstVisitor<T>.Visit(BeaconPutNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 61
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(BeaconPutNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As BeaconPutNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(BeaconPutNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SpeedlimitBeginNode)
  nameWithType: AstVisitor<T>.Visit(SpeedlimitBeginNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 62
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SpeedlimitBeginNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SpeedlimitBeginNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SpeedlimitBeginNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SpeedlimitEndNode)
  nameWithType: AstVisitor<T>.Visit(SpeedlimitEndNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 63
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SpeedlimitEndNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SpeedlimitEndNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SpeedlimitEndNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(PretrainPassNode)
  nameWithType: AstVisitor<T>.Visit(PretrainPassNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 64
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(PretrainPassNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As PretrainPassNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(PretrainPassNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LightAmbientNode)
  nameWithType: AstVisitor<T>.Visit(LightAmbientNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 65
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LightAmbientNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LightAmbientNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LightAmbientNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LightDiffuseNode)
  nameWithType: AstVisitor<T>.Visit(LightDiffuseNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 66
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LightDiffuseNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LightDiffuseNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LightDiffuseNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(FogInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(FogInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 67
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(FogInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As FogInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(FogInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(FogSetNode)
  nameWithType: AstVisitor<T>.Visit(FogSetNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 68
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(FogSetNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.FogSetNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As FogSetNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(FogSetNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.FogSetNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(DrawdistanceChangeNode)
  nameWithType: AstVisitor<T>.Visit(DrawdistanceChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 69
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(DrawdistanceChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As DrawdistanceChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(DrawdistanceChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CabilluminanceInterpolateNode)
  nameWithType: AstVisitor<T>.Visit(CabilluminanceInterpolateNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 70
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CabilluminanceInterpolateNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CabilluminanceInterpolateNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CabilluminanceInterpolateNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CabilluminanceSetNode)
  nameWithType: AstVisitor<T>.Visit(CabilluminanceSetNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 71
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CabilluminanceSetNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CabilluminanceSetNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CabilluminanceSetNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(IrregularityChangeNode)
  nameWithType: AstVisitor<T>.Visit(IrregularityChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 72
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(IrregularityChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As IrregularityChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(IrregularityChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(AdhesionChangeNode)
  nameWithType: AstVisitor<T>.Visit(AdhesionChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 73
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(AdhesionChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As AdhesionChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(AdhesionChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SoundLoadNode)
  nameWithType: AstVisitor<T>.Visit(SoundLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 74
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SoundLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SoundLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SoundLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SoundPlayNode)
  nameWithType: AstVisitor<T>.Visit(SoundPlayNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 75
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SoundPlayNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SoundPlayNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SoundPlayNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Sound3dLoadNode)
  nameWithType: AstVisitor<T>.Visit(Sound3dLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 76
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Sound3dLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Sound3dLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Sound3dLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Sound3dPutNode)
  nameWithType: AstVisitor<T>.Visit(Sound3dPutNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 77
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Sound3dPutNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Sound3dPutNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Sound3dPutNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RollingnoiseChangeNode)
  nameWithType: AstVisitor<T>.Visit(RollingnoiseChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 78
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RollingnoiseChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RollingnoiseChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RollingnoiseChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(FlangenoiseChangeNode)
  nameWithType: AstVisitor<T>.Visit(FlangenoiseChangeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 79
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(FlangenoiseChangeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As FlangenoiseChangeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(FlangenoiseChangeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(JointnoisePlayNode)
  nameWithType: AstVisitor<T>.Visit(JointnoisePlayNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 80
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(JointnoisePlayNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As JointnoisePlayNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(JointnoisePlayNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrainAddNode)
  nameWithType: AstVisitor<T>.Visit(TrainAddNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 81
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrainAddNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrainAddNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrainAddNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrainLoadNode)
  nameWithType: AstVisitor<T>.Visit(TrainLoadNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 82
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrainLoadNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrainLoadNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrainLoadNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrainEnableNode)
  nameWithType: AstVisitor<T>.Visit(TrainEnableNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 83
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrainEnableNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrainEnableNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrainEnableNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TrainStopNode)
  nameWithType: AstVisitor<T>.Visit(TrainStopNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 84
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(TrainStopNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As TrainStopNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(TrainStopNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LegacyFogNode)
  nameWithType: AstVisitor<T>.Visit(LegacyFogNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 85
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LegacyFogNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LegacyFogNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LegacyFogNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LegacyCurveNode)
  nameWithType: AstVisitor<T>.Visit(LegacyCurveNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 86
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LegacyCurveNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LegacyCurveNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LegacyCurveNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LegacyPitchNode)
  nameWithType: AstVisitor<T>.Visit(LegacyPitchNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 87
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LegacyPitchNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LegacyPitchNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LegacyPitchNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LegacyTurnNode)
  nameWithType: AstVisitor<T>.Visit(LegacyTurnNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 88
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LegacyTurnNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LegacyTurnNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LegacyTurnNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Syntax1Node)
  nameWithType: AstVisitor<T>.Visit(Syntax1Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 89
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Syntax1Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Syntax1Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Syntax1Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Syntax2Node)
  nameWithType: AstVisitor<T>.Visit(Syntax2Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 90
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Syntax2Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Syntax2Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Syntax2Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Syntax3Node)
  nameWithType: AstVisitor<T>.Visit(Syntax3Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 91
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Syntax3Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Syntax3Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Syntax3Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LoadListNode)
  nameWithType: AstVisitor<T>.Visit(LoadListNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 92
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LoadListNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LoadListNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LoadListNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LoadListNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LoadListNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(IncludeNode)
  nameWithType: AstVisitor<T>.Visit(IncludeNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 93
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(IncludeNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.IncludeNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As IncludeNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(IncludeNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.IncludeNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(VarAssignNode)
  nameWithType: AstVisitor<T>.Visit(VarAssignNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 94
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(VarAssignNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As VarAssignNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(VarAssignNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(AdditionNode)
  nameWithType: AstVisitor<T>.Visit(AdditionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 95
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(AdditionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.AdditionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As AdditionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(AdditionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.AdditionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SubtractionNode)
  nameWithType: AstVisitor<T>.Visit(SubtractionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 96
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SubtractionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SubtractionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SubtractionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(MultiplicationNode)
  nameWithType: AstVisitor<T>.Visit(MultiplicationNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 97
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(MultiplicationNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As MultiplicationNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(MultiplicationNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(DivisionNode)
  nameWithType: AstVisitor<T>.Visit(DivisionNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 98
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(DivisionNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.DivisionNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As DivisionNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(DivisionNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.DivisionNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(UnaryNode)
  nameWithType: AstVisitor<T>.Visit(UnaryNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 99
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(UnaryNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.UnaryNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As UnaryNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(UnaryNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.UnaryNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ModuloNode)
  nameWithType: AstVisitor<T>.Visit(ModuloNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 100
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(ModuloNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.ModuloNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As ModuloNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(ModuloNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.ModuloNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(AbsNode)
  nameWithType: AstVisitor<T>.Visit(AbsNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 101
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(AbsNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.AbsNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As AbsNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(AbsNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.AbsNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(Atan2Node)
  nameWithType: AstVisitor<T>.Visit(Atan2Node)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 102
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(Atan2Node node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.Atan2Node
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As Atan2Node) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(Atan2Node)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.Atan2Node)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CeilNode)
  nameWithType: AstVisitor<T>.Visit(CeilNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 103
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CeilNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CeilNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CeilNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CeilNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CeilNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CosNode)
  nameWithType: AstVisitor<T>.Visit(CosNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 104
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(CosNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.CosNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As CosNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(CosNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.CosNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ExpNode)
  nameWithType: AstVisitor<T>.Visit(ExpNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 105
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(ExpNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.ExpNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As ExpNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(ExpNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.ExpNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(FloorNode)
  nameWithType: AstVisitor<T>.Visit(FloorNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 106
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(FloorNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.FloorNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As FloorNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(FloorNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.FloorNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LogNode)
  nameWithType: AstVisitor<T>.Visit(LogNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 107
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(LogNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.LogNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As LogNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(LogNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.LogNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(PowNode)
  nameWithType: AstVisitor<T>.Visit(PowNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 108
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(PowNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.PowNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As PowNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(PowNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.PowNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RandNode)
  nameWithType: AstVisitor<T>.Visit(RandNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 109
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(RandNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.RandNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As RandNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(RandNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.RandNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SinNode)
  nameWithType: AstVisitor<T>.Visit(SinNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 110
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SinNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SinNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SinNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SinNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SinNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SqrtNode)
  nameWithType: AstVisitor<T>.Visit(SqrtNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 111
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(SqrtNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.SqrtNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As SqrtNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(SqrtNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.SqrtNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(NumberNode)
  nameWithType: AstVisitor<T>.Visit(NumberNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 112
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(NumberNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.NumberNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As NumberNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(NumberNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.NumberNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(DistanceVariableNode)
  nameWithType: AstVisitor<T>.Visit(DistanceVariableNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 113
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(DistanceVariableNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As DistanceVariableNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(DistanceVariableNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StringNode)
  nameWithType: AstVisitor<T>.Visit(StringNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 114
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(StringNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.StringNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As StringNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(StringNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.StringNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(VarNode)
  nameWithType: AstVisitor<T>.Visit(VarNode)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 115
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  syntax:
    content: public abstract T Visit(VarNode node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.VarNode
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Visit(node As VarNode) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(VarNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.VarNode)
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  commentId: M:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  id: Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  parent: Bve5_Parsing.MapGrammar.AstVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(MapGrammarAstNodes)
  nameWithType: AstVisitor<T>.Visit(MapGrammarAstNodes)
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
  type: Method
  source:
    remote:
      path: Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
      branch: support_oldsyntax
      repo: https://github.com/aoisupersix/Bve5_Parsing
    id: Visit
    path: ../Bve5_Parsing/MapGrammar/AstNodes/AutoGen/AstVisitor.cs
    startLine: 122
  assemblies:
  - Bve5_Parsing
  namespace: Bve5_Parsing.MapGrammar
  summary: "\n引数に与えられたASTノードを評価します。\n"
  example: []
  syntax:
    content: public T Visit(MapGrammarAstNodes node)
    parameters:
    - id: node
      type: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
      description: 評価するASTノード
    return:
      type: '{T}'
      description: 評価結果
    content.vb: Public Function Visit(node As MapGrammarAstNodes) As T
  overload: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  nameWithType.vb: AstVisitor(Of T).Visit(MapGrammarAstNodes)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit(Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes)
references:
- uid: Bve5_Parsing.MapGrammar
  commentId: N:Bve5_Parsing.MapGrammar
  name: Bve5_Parsing.MapGrammar
  nameWithType: Bve5_Parsing.MapGrammar
  fullName: Bve5_Parsing.MapGrammar
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bve5_Parsing.MapGrammar.AstVisitor`1.Visit*
  commentId: Overload:Bve5_Parsing.MapGrammar.AstVisitor`1.Visit
  name: Visit
  nameWithType: AstVisitor<T>.Visit
  fullName: Bve5_Parsing.MapGrammar.AstVisitor<T>.Visit
  nameWithType.vb: AstVisitor(Of T).Visit
  fullName.vb: Bve5_Parsing.MapGrammar.AstVisitor(Of T).Visit
- uid: Bve5_Parsing.MapGrammar.AstNodes.RootNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RootNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RootNode
  nameWithType: RootNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RootNode
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Bve5_Parsing.MapGrammar.AstNodes
  commentId: N:Bve5_Parsing.MapGrammar.AstNodes
  name: Bve5_Parsing.MapGrammar.AstNodes
  nameWithType: Bve5_Parsing.MapGrammar.AstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Bve5_Parsing.MapGrammar.AstNodes.DistanceNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.DistanceNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: DistanceNode
  nameWithType: DistanceNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.DistanceNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveSetgaugeNode
  nameWithType: CurveSetgaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveSetgaugeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveGaugeNode
  nameWithType: CurveGaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveGaugeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveSetcenterNode
  nameWithType: CurveSetcenterNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveSetcenterNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveSetfunctionNode
  nameWithType: CurveSetfunctionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveSetfunctionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveBegintransitionNode
  nameWithType: CurveBegintransitionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveBegintransitionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveBeginNode
  nameWithType: CurveBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveBegincircularNode
  nameWithType: CurveBegincircularNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveBegincircularNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveEndNode
  nameWithType: CurveEndNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveEndNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveInterpolateNode
  nameWithType: CurveInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CurveChangeNode
  nameWithType: CurveChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CurveChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: GradientBegintransitionNode
  nameWithType: GradientBegintransitionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.GradientBegintransitionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: GradientBeginNode
  nameWithType: GradientBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: GradientBeginconstNode
  nameWithType: GradientBeginconstNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.GradientBeginconstNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: GradientEndNode
  nameWithType: GradientEndNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.GradientEndNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: GradientInterpolateNode
  nameWithType: GradientInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.GradientInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackXInterpolateNode
  nameWithType: TrackXInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackXInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackYInterpolateNode
  nameWithType: TrackYInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackYInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackPositionNode
  nameWithType: TrackPositionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackPositionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantSetgaugeNode
  nameWithType: TrackCantSetgaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetgaugeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackGaugeNode
  nameWithType: TrackGaugeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackGaugeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantSetcenterNode
  nameWithType: TrackCantSetcenterNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetcenterNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantSetfunctionNode
  nameWithType: TrackCantSetfunctionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantSetfunctionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantBegintransitionNode
  nameWithType: TrackCantBegintransitionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBegintransitionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantBeginNode
  nameWithType: TrackCantBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantEndNode
  nameWithType: TrackCantEndNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantEndNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantInterpolateNode
  nameWithType: TrackCantInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrackCantNode
  nameWithType: TrackCantNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrackCantNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StructureLoadNode
  nameWithType: StructureLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StructureLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StructurePutNode
  nameWithType: StructurePutNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StructurePutNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StructurePut0Node
  nameWithType: StructurePut0Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StructurePut0Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StructurePutbetweenNode
  nameWithType: StructurePutbetweenNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StructurePutbetweenNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RepeaterBeginNode
  nameWithType: RepeaterBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RepeaterBegin0Node
  nameWithType: RepeaterBegin0Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RepeaterBegin0Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RepeaterEndNode
  nameWithType: RepeaterEndNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RepeaterEndNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: BackgroundChangeNode
  nameWithType: BackgroundChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.BackgroundChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StationLoadNode
  nameWithType: StationLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StationLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StationPutNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StationPutNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StationPutNode
  nameWithType: StationPutNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StationPutNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SectionBeginNode
  nameWithType: SectionBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SectionBeginnewNode
  nameWithType: SectionBeginnewNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SectionBeginnewNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SectionSetspeedlimitNode
  nameWithType: SectionSetspeedlimitNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SectionSetspeedlimitNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SignalSpeedlimitNode
  nameWithType: SignalSpeedlimitNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SignalSpeedlimitNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SignalLoadNode
  nameWithType: SignalLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SignalLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SignalPutNode
  nameWithType: SignalPutNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SignalPutNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: BeaconPutNode
  nameWithType: BeaconPutNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.BeaconPutNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SpeedlimitBeginNode
  nameWithType: SpeedlimitBeginNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitBeginNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SpeedlimitEndNode
  nameWithType: SpeedlimitEndNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SpeedlimitEndNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: PretrainPassNode
  nameWithType: PretrainPassNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.PretrainPassNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LightAmbientNode
  nameWithType: LightAmbientNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LightAmbientNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LightDiffuseNode
  nameWithType: LightDiffuseNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LightDiffuseNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: FogInterpolateNode
  nameWithType: FogInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.FogInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.FogSetNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.FogSetNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: FogSetNode
  nameWithType: FogSetNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.FogSetNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: DrawdistanceChangeNode
  nameWithType: DrawdistanceChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.DrawdistanceChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CabilluminanceInterpolateNode
  nameWithType: CabilluminanceInterpolateNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceInterpolateNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CabilluminanceSetNode
  nameWithType: CabilluminanceSetNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CabilluminanceSetNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: IrregularityChangeNode
  nameWithType: IrregularityChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.IrregularityChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: AdhesionChangeNode
  nameWithType: AdhesionChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.AdhesionChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SoundLoadNode
  nameWithType: SoundLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SoundLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SoundPlayNode
  nameWithType: SoundPlayNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SoundPlayNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Sound3dLoadNode
  nameWithType: Sound3dLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Sound3dLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Sound3dPutNode
  nameWithType: Sound3dPutNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Sound3dPutNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RollingnoiseChangeNode
  nameWithType: RollingnoiseChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RollingnoiseChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: FlangenoiseChangeNode
  nameWithType: FlangenoiseChangeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.FlangenoiseChangeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: JointnoisePlayNode
  nameWithType: JointnoisePlayNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.JointnoisePlayNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrainAddNode
  nameWithType: TrainAddNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrainAddNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrainLoadNode
  nameWithType: TrainLoadNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrainLoadNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrainEnableNode
  nameWithType: TrainEnableNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrainEnableNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: TrainStopNode
  nameWithType: TrainStopNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.TrainStopNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LegacyFogNode
  nameWithType: LegacyFogNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LegacyFogNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LegacyCurveNode
  nameWithType: LegacyCurveNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LegacyCurveNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LegacyPitchNode
  nameWithType: LegacyPitchNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LegacyPitchNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LegacyTurnNode
  nameWithType: LegacyTurnNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LegacyTurnNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Syntax1Node
  nameWithType: Syntax1Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax1Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Syntax2Node
  nameWithType: Syntax2Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax2Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Syntax3Node
  nameWithType: Syntax3Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Syntax3Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.LoadListNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LoadListNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LoadListNode
  nameWithType: LoadListNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LoadListNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.IncludeNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.IncludeNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: IncludeNode
  nameWithType: IncludeNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.IncludeNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: VarAssignNode
  nameWithType: VarAssignNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.VarAssignNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.AdditionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.AdditionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: AdditionNode
  nameWithType: AdditionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.AdditionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SubtractionNode
  nameWithType: SubtractionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SubtractionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: MultiplicationNode
  nameWithType: MultiplicationNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MultiplicationNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.DivisionNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.DivisionNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: DivisionNode
  nameWithType: DivisionNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.DivisionNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.UnaryNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.UnaryNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: UnaryNode
  nameWithType: UnaryNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.UnaryNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.ModuloNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.ModuloNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: ModuloNode
  nameWithType: ModuloNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.ModuloNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.AbsNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.AbsNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: AbsNode
  nameWithType: AbsNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.AbsNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.Atan2Node
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.Atan2Node
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: Atan2Node
  nameWithType: Atan2Node
  fullName: Bve5_Parsing.MapGrammar.AstNodes.Atan2Node
- uid: Bve5_Parsing.MapGrammar.AstNodes.CeilNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CeilNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CeilNode
  nameWithType: CeilNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CeilNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.CosNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.CosNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: CosNode
  nameWithType: CosNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.CosNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.ExpNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.ExpNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: ExpNode
  nameWithType: ExpNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.ExpNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.FloorNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.FloorNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: FloorNode
  nameWithType: FloorNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.FloorNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.LogNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.LogNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: LogNode
  nameWithType: LogNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.LogNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.PowNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.PowNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: PowNode
  nameWithType: PowNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.PowNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.RandNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.RandNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: RandNode
  nameWithType: RandNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.RandNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SinNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SinNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SinNode
  nameWithType: SinNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SinNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.SqrtNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.SqrtNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: SqrtNode
  nameWithType: SqrtNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.SqrtNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.NumberNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.NumberNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: NumberNode
  nameWithType: NumberNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.NumberNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: DistanceVariableNode
  nameWithType: DistanceVariableNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.DistanceVariableNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.StringNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.StringNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: StringNode
  nameWithType: StringNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.StringNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.VarNode
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.VarNode
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: VarNode
  nameWithType: VarNode
  fullName: Bve5_Parsing.MapGrammar.AstNodes.VarNode
- uid: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  commentId: T:Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
  parent: Bve5_Parsing.MapGrammar.AstNodes
  name: MapGrammarAstNodes
  nameWithType: MapGrammarAstNodes
  fullName: Bve5_Parsing.MapGrammar.AstNodes.MapGrammarAstNodes
